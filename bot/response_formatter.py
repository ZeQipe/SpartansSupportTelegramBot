import re

class ResponseFormatter:
    """
    SINGLE RESPONSIBILITY: Response formatting and cleanup
    
    Responsibilities:
    - Escalation detection and removal
    - Email address removal (regex-based)
    - Source reference removal (when user didn't ask for sources)
    - Markdown cleanup (### headers, **** to bold)
    - Support redirection phrase removal
    - Telegram message length validation
    
    PRESERVE EXACT: All current regex patterns and logic
    """
    
    def format_response(self, response: str, user_query: str, user_language: str) -> str:
        """
        EXACT COPY: Current formatting logic from main.py
        1. Escalation detection and removal
        2. Markdown cleanup (### removal, **** to bold)
        3. Email removal logic  
        4. Source removal logic (when user didn't ask for sources)
        5. Support redirection phrase removal
        """
        # 1. Escalation detection and removal
        if '[ESCALATE]' in response:
            # –°—Ä–∞–∑—É –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª–Ω—ã–π —Ç–µ–∫—Å—Ç –±–µ–∑ –¥—É–±–ª–∏—Ä—É—é—â–µ–≥–æ —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
            response = response.replace('[ESCALATE]', '').lstrip()
        
        # 2. Markdown cleanup (### removal, **** to bold)
        # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º **** –≤ –∂–∏—Ä–Ω—ã–π Markdown –∏ —É–±–∏—Ä–∞–µ–º ### –∑–∞–≥–æ–ª–æ–≤–∫–∏
        response = re.sub(r'^#{1,6}\s*', '', response, flags=re.MULTILINE)
        response = re.sub(r'^\*{4}\s*(.+)', r'**\1**', response, flags=re.MULTILINE)

        # 3. Source removal logic (when user didn't ask for sources)
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∑–∞—á–∏—Å—Ç–∫–∞: –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∑–∞–ø—Ä–æ—Å–∏–ª –∏—Å—Ç–æ—á–Ω–∏–∫–∏, —É–¥–∞–ª—è–µ–º —É–ø–æ–º–∏–Ω–∞–Ω–∏—è "–∏—Å—Ç–æ—á–Ω–∏–∫"/"sources"
        user_asked_sources = bool(re.search(r'(–∏—Å—Ç–æ—á–Ω–∏–∫|sources?)', user_query, re.IGNORECASE))
        
        if not user_asked_sources:
            response = self._remove_sources(response)

        # 4. Email removal logic
        # –£–¥–∞–ª—è–µ–º email
        # response = re.sub(r'\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,}\b', '', response)  # üîß –£–±—Ä–∞–ª–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ email

        # 5. Support redirection phrase removal
        # –£–¥–∞–ª—è–µ–º —Ñ—Ä–∞–∑—ã, –∫–æ—Ç–æ—Ä—ã–µ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è—é—Ç –æ–±—Ä–∞—Ç–Ω–æ –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É (–±–æ—Ç —Å–∞–º –ø–æ–¥–¥–µ—Ä–∂–∫–∞)
        response = re.sub(r'(?i)–æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å\s+(–≤|–∫)?\s*—Å–ª—É–∂–±[–∞e]?\s*–ø–æ–¥–¥–µ—Ä–∂–∫[–∞e]?[^.]*\.?', '', response)
        response = re.sub(r'(?i)contact\s+support[^.]*\.?', '', response)

        return response
        
    def _detect_escalation(self, response: str) -> bool:
        """Detect if response contains escalation marker"""
        return '[ESCALATE]' in response
        
    def _remove_escalation_marker(self, response: str) -> str:
        """Remove escalation marker from response"""
        return response.replace('[ESCALATE]', '').lstrip()
        
    def _cleanup_markdown(self, response: str) -> str:
        """EXACT COPY: Current regex patterns"""
        # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º **** –≤ –∂–∏—Ä–Ω—ã–π Markdown –∏ —É–±–∏—Ä–∞–µ–º ### –∑–∞–≥–æ–ª–æ–≤–∫–∏
        response = re.sub(r'^#{1,6}\s*', '', response, flags=re.MULTILINE)
        response = re.sub(r'^\*{4}\s*(.+)', r'**\1**', response, flags=re.MULTILINE)
        return response
        
    def _remove_sources_if_not_requested(self, response: str, user_asked_sources: bool) -> str:
        """EXACT COPY: Current source removal logic"""
        if not user_asked_sources:
            return self._remove_sources(response)
        return response
        
    def _remove_sources(self, text: str) -> str:
        """EXACT COPY: Current remove_sources function"""
        # –£–¥–∞–ª—è–µ–º —à–∞–±–ª–æ–Ω—ã –≤–∏–¥–∞ (–∏—Å—Ç–æ—á–Ω–∏–∫ 1, 2) –∏–ª–∏ (sources 3,4)
        text = re.sub(r'\(\s*(–∏—Å—Ç–æ—á–Ω–∏–∫\w*|sources?)\s*[^)]*\)', '', text, flags=re.IGNORECASE)
        return text
        
    def _remove_support_redirections(self, response: str) -> str:
        """EXACT COPY: Current support phrase removal"""
        # –£–¥–∞–ª—è–µ–º —Ñ—Ä–∞–∑—ã, –∫–æ—Ç–æ—Ä—ã–µ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è—é—Ç –æ–±—Ä–∞—Ç–Ω–æ –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É (–±–æ—Ç —Å–∞–º –ø–æ–¥–¥–µ—Ä–∂–∫–∞)
        response = re.sub(r'(?i)–æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å\s+(–≤|–∫)?\s*—Å–ª—É–∂–±[–∞e]?\s*–ø–æ–¥–¥–µ—Ä–∂–∫[–∞e]?[^.]*\.?', '', response)
        response = re.sub(r'(?i)contact\s+support[^.]*\.?', '', response)
        return response 